[{"/home/mophat/Downloads/Projects/Soma_Tube/client/src/index.js":"1","/home/mophat/Downloads/Projects/Soma_Tube/client/src/App.js":"2","/home/mophat/Downloads/Projects/Soma_Tube/client/src/utils/Theme.js":"3","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Navbar.jsx":"4","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Menu.jsx":"5","/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/Home.jsx":"6","/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/SignIn.jsx":"7","/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/Video.jsx":"8","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Comments.jsx":"9","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Card.jsx":"10","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Comment.jsx":"11","/home/mophat/Downloads/Projects/Soma_Tube/client/src/redux/userSlice.js":"12","/home/mophat/Downloads/Projects/Soma_Tube/client/src/redux/store.js":"13","/home/mophat/Downloads/Projects/Soma_Tube/client/src/redux/videoSlice.js":"14","/home/mophat/Downloads/Projects/Soma_Tube/client/src/firebase.js":"15"},{"size":557,"mtime":1682791599920,"results":"16","hashOfConfig":"17"},{"size":1664,"mtime":1682668078321,"results":"18","hashOfConfig":"17"},{"size":244,"mtime":1656596102000,"results":"19","hashOfConfig":"17"},{"size":2173,"mtime":1682794040079,"results":"20","hashOfConfig":"17"},{"size":4858,"mtime":1682778645474,"results":"21","hashOfConfig":"17"},{"size":684,"mtime":1682668099089,"results":"22","hashOfConfig":"17"},{"size":4200,"mtime":1682794394590,"results":"23","hashOfConfig":"17"},{"size":5951,"mtime":1682820369671,"results":"24","hashOfConfig":"17"},{"size":1389,"mtime":1682820363073,"results":"25","hashOfConfig":"17"},{"size":2214,"mtime":1682795899637,"results":"26","hashOfConfig":"17"},{"size":1354,"mtime":1682820339734,"results":"27","hashOfConfig":"17"},{"size":1307,"mtime":1682818298380,"results":"28","hashOfConfig":"17"},{"size":1136,"mtime":1682793452665,"results":"29","hashOfConfig":"17"},{"size":1638,"mtime":1682819345288,"results":"30","hashOfConfig":"17"},{"size":309,"mtime":1682793447243,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"75qhdl",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"/home/mophat/Downloads/Projects/Soma_Tube/client/src/index.js",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/App.js",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/utils/Theme.js",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Navbar.jsx",["82"],[],"import React from \"react\";\nimport styled from \"styled-components\";\nimport AccountCircleOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\nimport VideoCallOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\nimport SearchOutlinedIcon from \"@mui/icons-material/SearchOutlined\";\nimport { Link } from \"react-router-dom\";\nimport {useSelector} from 'react-redux';\n\nconst Container = styled.div`\n  position: sticky;\n  top: 0;\n  background-color: ${({ theme }) => theme.bgLighter};\n  height: 56px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  height: 100%;\n  padding: 0px 20px;\n  position: relative;\n`;\n\nconst Search = styled.div`\n  width: 40%;\n  position: absolute;\n  left: 0px;\n  right: 0px;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  background-color: transparent;\n  outline: none;\n  color: ${({ theme }) => theme.text};\n`;\n\nconst Button = styled.button`\n  padding: 5px 15px;\n  background-color: transparent;\n  border: 1px solid #3ea6ff;\n  color: #3ea6ff;\n  border-radius: 3px;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\nconst User = styled.div `\ndisplay: flex;\njustify-content: center;\ngap:10px;\nfont-weight: 500;\ncolor: ${({ theme }) => theme.text};\n\n`;\n\nconst Avatar = styled. img`\nwidth:32px;\nheight:32px;\nborder-radius:50%;\n\n`;\n\nconst Navbar = () => {\n  const {currentUser} = useSelector((state)=>state.user)\n  return (\n    <Container>\n      <Wrapper>\n        <Search>\n          <Input placeholder=\"Search\" />\n          <SearchOutlinedIcon />\n        </Search>\n        { currentUser ? (\n          <User>\n          <VideoCallOutlinedIcon />\n          <Avatar src={currentUser.img}/>\n           {currentUser.name}\n\n          </User>\n        ) : <Link to=\"signin\" style={{ textDecoration: \"none\" }}>\n          <Button>\n            <AccountCircleOutlinedIcon />\n            SIGN IN\n          </Button>\n        </Link>}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Navbar;\n","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Menu.jsx",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/Home.jsx",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/SignIn.jsx",["83","84"],[],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { loginFailure, loginStart, loginSuccess } from \"../redux/userSlice\";\nimport { auth, provider } from \"../firebase\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport { async } from \"@firebase/util\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: calc(100vh - 56px);\n  color: ${({ theme }) => theme.text};\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.bgLighter};\n  border: 1px solid ${({ theme }) => theme.soft};\n  padding: 20px 50px;\n  gap: 10px;\n`;\n\nconst Title = styled.h1`\n  font-size: 24px;\n`;\n\nconst SubTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 300;\n`;\n\nconst Input = styled.input`\n  border: 1px solid ${({ theme }) => theme.soft};\n  border-radius: 3px;\n  padding: 10px;\n  background-color: transparent;\n  width: 100%;\n  color: ${({ theme }) => theme.text};\n`;\n\nconst Button = styled.button`\n  border-radius: 3px;\n  border: none;\n  padding: 10px 20px;\n  font-weight: 500;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.soft};\n  color: ${({ theme }) => theme.textSoft};\n`;\n\nconst More = styled.div`\n  display: flex;\n  margin-top: 10px;\n  font-size: 12px;\n  color: ${({ theme }) => theme.textSoft};\n`;\n\nconst Links = styled.div`\n  margin-left: 50px;\n`;\n\nconst Link = styled.span`\n  margin-left: 30px;\n`;\n\nconst SignIn = () => {\n  const [userName , setUserName] = useState(\"\")\n  const [email , setUserEmail] = useState(\"\")\n  const [password , setPassword] = useState(\"\")\n// dispatch the various actions\n  const dispatch = useDispatch()\n\n  // handle login\n  const handleSignIn = async(e)=>{\n    e.preventDefault()\n    dispatch(loginStart())\n    try {\n      const res = await axios.post('/auth/signIn',{email,password})\n     dispatch(loginSuccess(res.data))\n      // handle the login success...\n      \n    } catch (error) {\n      // handle the error in the frontend...\n      console.log(error)\n      dispatch(loginFailure())\n    }\n\n  }\n\n\n  const signInWithGoogle = async () => {\n    dispatch(loginStart());\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        axios\n          .post(\"/auth/google\", {\n            name: result.user.displayName,\n            email: result.user.email,\n            img: result.user.photoURL,\n          })\n          .then((res) => {\n            console.log(res)\n            dispatch(loginSuccess(res.data));\n          });\n      })\n      .catch((error) => {\n        dispatch(loginFailure());\n      });\n  };\n\n  const handleSignUp = async()=>{\n    dispatch(loginStart())\n\n    try {\n     const res =  axios.post('/auth/signup',{\n        name:userName,\n        email,password\n      })\n      dispatch(loginSuccess(res.data))\n      //handle successfull registration...\n      \n    } catch (error) {\n      dispatch(loginFailure())\n      //handle an error in registration..\n      \n    }\n\n\n  }\n  return (\n    <Container>\n      <Wrapper>\n        <Title>Sign in</Title>\n        <SubTitle>to continue to LamaTube</SubTitle>\n        <Input placeholder=\"username\" onChange={(e)=>setUserName(e.target.value)} />\n        <Input type=\"password\" placeholder=\"password\" onChange={(e)=>setPassword(e.target.value)} />\n        <Button onClick={handleSignIn}>Sign in</Button>\n        <Title>or</Title>\n        <Button onClick={signInWithGoogle}>Signin with Google</Button>\n        <Title>or</Title>\n        <Input placeholder=\"username\" onChange={(e)=>setUserName(e.target.value)}/>\n        <Input placeholder=\"email\" onChange={(e)=>setUserEmail(e.target.value)} />\n        <Input type=\"password\" placeholder=\"password\" onChange={(e)=>setPassword(e.target.value)} />\n        <Button onClick={handleSignUp} >Sign up</Button>\n      </Wrapper>\n      <More>\n        English(USA)\n        <Links>\n          <Link>Help</Link>\n          <Link>Privacy</Link>\n          <Link>Terms</Link>\n        </Links>\n      </More>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/Video.jsx",["85","86"],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Comments.jsx",["87"],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Card.jsx",["88","89","90"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { format, render, cancel, register } from 'timeago.js';\nimport axios from \"axios\"\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nconst Container = styled.div`\n  width: ${(props) => props.type !== \"sm\" && \"360px\"};\n  margin-bottom: ${(props) => (props.type === \"sm\" ? \"10px\" : \"45px\")};\n  cursor: pointer;\n  display: ${(props) => props.type === \"sm\" && \"flex\"};\n  gap: 10px;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: ${(props) => (props.type === \"sm\" ? \"120px\" : \"202px\")};\n  background-color: #999;\n  flex: 1;\n`;\n\nconst Details = styled.div`\n  display: flex;\n  margin-top: ${(props) => props.type !== \"sm\" && \"16px\"};\n  gap: 12px;\n  flex: 1;\n`;\n\nconst ChannelImage = styled.img`\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: #999;\n  display: ${(props) => props.type === \"sm\" && \"none\"};\n`;\n\nconst Texts = styled.div``;\n\nconst Title = styled.h1`\n  font-size: 16px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.text};\n`;\n\nconst ChannelName = styled.h2`\n  font-size: 14px;\n  color: ${({ theme }) => theme.textSoft};\n  margin: 9px 0px;\n`;\n\nconst Info = styled.div`\n  font-size: 14px;\n  color: ${({ theme }) => theme.textSoft};\n`;\n//TODO install timeago.js\n\nconst Card = ({ type,video }) => {\n  \n  const [channel,setChannels] = useState([])\n  useEffect(()=>{\n\n    const fetchChannels =async ()=>{\n      const res =await axios.get(`/users/find/${video.userId}`)\n      setChannels(res.data)\n    }\n    fetchChannels()\n\n  },[video.userId])\n\n  return (\n    <Link to={`/videos/${video._id}`} style={{ textDecoration: \"none\" }}>\n      <Container type={type}>\n        <Image\n          type={type}\n          src={video.imageUrl}\n        />\n        <Details type={type}>\n          <ChannelImage\n            type={type}\n            src={channel.image}\n          />\n          <Texts>\n            <Title>{video.title}</Title>\n            <ChannelName>{channel.name}</ChannelName>\n            <Info>{video.views} • {format(video.createdAt)}</Info>\n          </Texts>\n        </Details>\n      </Container>\n    </Link>\n  );\n};\n\nexport default Card;\n","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Comment.jsx",["91"],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/redux/userSlice.js",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/redux/store.js",["92"],[],"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport userReducer from \"./userSlice\";\nimport videoReducer from \"./videoSlice\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n//TODO install the  redux-persist\n\n// The persistance configuration in redux-toolkit is used to store the states persited in local storage.\n// We need to register the reducer so that it can be used with the persistent .\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\n\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n};\n\nconst rootReducer = combineReducers({ user: userReducer, video: videoReducer });\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store)","/home/mophat/Downloads/Projects/Soma_Tube/client/src/redux/videoSlice.js",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/firebase.js",["93"],[],"import { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\n//TODO install firebase\n\n// firebase configuration ...\n\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth();\nexport const provider = new GoogleAuthProvider();\n\nexport default app;\n",{"ruleId":"94","severity":1,"message":"95","line":67,"column":16,"nodeType":"96","messageId":"97","endLine":67,"endColumn":27,"fix":"98"},{"ruleId":"99","severity":1,"message":"100","line":8,"column":10,"nodeType":"101","messageId":"102","endLine":8,"endColumn":15},{"ruleId":"99","severity":1,"message":"103","line":9,"column":10,"nodeType":"101","messageId":"102","endLine":9,"endColumn":21},{"ruleId":"99","severity":1,"message":"104","line":124,"column":10,"nodeType":"101","messageId":"102","endLine":124,"endColumn":15},{"ruleId":"99","severity":1,"message":"105","line":124,"column":16,"nodeType":"101","messageId":"102","endLine":124,"endColumn":24},{"ruleId":"99","severity":1,"message":"106","line":4,"column":9,"nodeType":"101","messageId":"102","endLine":4,"endColumn":20},{"ruleId":"99","severity":1,"message":"107","line":4,"column":18,"nodeType":"101","messageId":"102","endLine":4,"endColumn":24},{"ruleId":"99","severity":1,"message":"108","line":4,"column":26,"nodeType":"101","messageId":"102","endLine":4,"endColumn":32},{"ruleId":"99","severity":1,"message":"109","line":4,"column":34,"nodeType":"101","messageId":"102","endLine":4,"endColumn":42},{"ruleId":"99","severity":1,"message":"110","line":43,"column":10,"nodeType":"101","messageId":"102","endLine":43,"endColumn":17},{"ruleId":"99","severity":1,"message":"111","line":19,"column":10,"nodeType":"101","messageId":"102","endLine":19,"endColumn":21},{"ruleId":"112","severity":2,"message":"113","line":8,"column":27,"nodeType":"101","messageId":"114","endLine":8,"endColumn":41},"no-whitespace-before-property","Unexpected whitespace before property img.","MemberExpression","unexpectedWhitespace",{"range":"115","text":"116"},"no-unused-vars","'async' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'video' is assigned a value but never used.","'setVideo' is assigned a value but never used.","'currentUser' is defined but never used.","'render' is defined but never used.","'cancel' is defined but never used.","'register' is defined but never used.","'channel' is assigned a value but never used.","'PersistGate' is defined but never used.","no-undef","'firebaseConfig' is not defined.","undef",[1465,1467],"."]
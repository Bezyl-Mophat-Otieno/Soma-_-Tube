[{"/home/mophat/Downloads/Projects/Soma_Tube/client/src/index.js":"1","/home/mophat/Downloads/Projects/Soma_Tube/client/src/App.js":"2","/home/mophat/Downloads/Projects/Soma_Tube/client/src/utils/Theme.js":"3","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Navbar.jsx":"4","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Menu.jsx":"5","/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/Home.jsx":"6","/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/SignIn.jsx":"7","/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/Video.jsx":"8","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Comments.jsx":"9","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Card.jsx":"10","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Comment.jsx":"11","/home/mophat/Downloads/Projects/Soma_Tube/client/src/redux/userSlice.js":"12","/home/mophat/Downloads/Projects/Soma_Tube/client/src/redux/store.js":"13","/home/mophat/Downloads/Projects/Soma_Tube/client/src/redux/videoSlice.js":"14","/home/mophat/Downloads/Projects/Soma_Tube/client/src/firebase.js":"15","/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/Search.jsx":"16","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Upload.jsx":"17","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Recomendation.jsx":"18","/home/mophat/Downloads/Projects/Soma_Tube/client/src/modules.js":"19"},{"size":557,"mtime":1682791599920,"results":"20","hashOfConfig":"21"},{"size":1764,"mtime":1682865853717,"results":"22","hashOfConfig":"21"},{"size":244,"mtime":1656596102000,"results":"23","hashOfConfig":"21"},{"size":2541,"mtime":1682965206488,"results":"24","hashOfConfig":"21"},{"size":5879,"mtime":1683105472490,"results":"25","hashOfConfig":"21"},{"size":765,"mtime":1683046856896,"results":"26","hashOfConfig":"21"},{"size":4403,"mtime":1683094872721,"results":"27","hashOfConfig":"21"},{"size":5590,"mtime":1682905697576,"results":"28","hashOfConfig":"21"},{"size":1389,"mtime":1682820363073,"results":"29","hashOfConfig":"21"},{"size":2214,"mtime":1682795899637,"results":"30","hashOfConfig":"21"},{"size":1327,"mtime":1682964519333,"results":"31","hashOfConfig":"21"},{"size":1329,"mtime":1683094872721,"results":"32","hashOfConfig":"21"},{"size":1136,"mtime":1682793452665,"results":"33","hashOfConfig":"21"},{"size":1638,"mtime":1682819345288,"results":"34","hashOfConfig":"21"},{"size":655,"mtime":1682906454927,"results":"35","hashOfConfig":"21"},{"size":725,"mtime":1682963908516,"results":"36","hashOfConfig":"21"},{"size":4697,"mtime":1682963922358,"results":"37","hashOfConfig":"21"},{"size":756,"mtime":1682963898611,"results":"38","hashOfConfig":"21"},{"size":55,"mtime":1683053659465,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"75qhdl",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"43"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mophat/Downloads/Projects/Soma_Tube/client/src/index.js",[],[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/App.js",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/utils/Theme.js",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Navbar.jsx",["104"],[],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport AccountCircleOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\nimport VideoCallOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\nimport SearchOutlinedIcon from \"@mui/icons-material/SearchOutlined\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {useSelector} from 'react-redux';\nimport Upload from \"./Upload\";\n\nconst Container = styled.div`\n  position: sticky;\n  top: 0;\n  background-color: ${({ theme }) => theme.bgLighter};\n  height: 56px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  height: 100%;\n  padding: 0px 20px;\n  position: relative;\n`;\n\nconst Search = styled.div`\n  width: 40%;\n  position: absolute;\n  left: 0px;\n  right: 0px;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n  color: ${({ theme }) => theme.text};\n`;\n\nconst Input = styled.input`\n  border: none;\n  background-color: transparent;\n  outline: none;\n  color: ${({ theme }) => theme.text};\n`;\n\nconst Button = styled.button`\n  padding: 5px 15px;\n  background-color: transparent;\n  border: 1px solid #3ea6ff;\n  color: #3ea6ff;\n  border-radius: 3px;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\nconst User = styled.div `\ndisplay: flex;\njustify-content: center;\ngap:10px;\nfont-weight: 500;\ncolor: ${({ theme }) => theme.text};\n\n`;\n\nconst Avatar = styled. img`\nwidth:32px;\nheight:32px;\nborder-radius:50%;\n\n`;\n\nconst Navbar = () => {\n\n  const [open,setOpen] = useState(false)\n  const {currentUser} = useSelector((state)=>state.user)\n  const [q,setQ] = useState(\"\")\n  const navigate = useNavigate()\n  return (\n    <>\n\n<Container>\n      <Wrapper>\n        <Search>\n          <Input placeholder=\"Search\" onChange={(e)=>setQ(e.target.value)}/>\n          <SearchOutlinedIcon onClick={()=>navigate(`/search?q=${q}`)}  />\n        </Search>\n        { currentUser ? (\n          <User>\n          <VideoCallOutlinedIcon onClick={()=>setOpen(true)} />\n          <Avatar src={currentUser.img}/>\n           {currentUser.name}\n\n          </User>\n        ) : <Link to=\"signin\" style={{ textDecoration: \"none\" }}>\n          <Button>\n            <AccountCircleOutlinedIcon />\n            SIGN IN\n          </Button>\n        </Link>}\n      </Wrapper>\n    </Container>\n\n    {open && <Upload setOpen={setOpen} /> }\n    </>\n\n  );\n};\n\nexport default Navbar;\n","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Menu.jsx",["105"],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/Home.jsx",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/SignIn.jsx",["106","107"],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/Video.jsx",["108","109"],[],"import React, { useEffect , useState } from \"react\";\nimport styled from \"styled-components\";\nimport ThumbUpOutlinedIcon from \"@mui/icons-material/ThumbUpOutlined\";\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport ThumbDownOffAltOutlinedIcon from \"@mui/icons-material/ThumbDownOffAltOutlined\";\nimport ReplyOutlinedIcon from \"@mui/icons-material/ReplyOutlined\";\nimport AddTaskOutlinedIcon from \"@mui/icons-material/AddTaskOutlined\";\nimport Comments from \"../components/Comments\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchStart, fetchSuccess , fetchFailure , like , dislike} from \"../redux/videoSlice\";\nimport { format } from \"timeago.js\";\nimport ThumbDownIcon from '@mui/icons-material/ThumbDown';\nimport { subscription } from \"../redux/userSlice\";\nimport Recomendation from \"../components/Recomendation\";\n\n\nconst Container = styled.div`\n  display: flex;\n  gap: 24px;\n`;\n\nconst Content = styled.div`\n  flex: 5;\n`;\nconst VideoWrapper = styled.div``;\n\nconst Title = styled.h1`\n  font-size: 18px;\n  font-weight: 400;\n  margin-top: 20px;\n  margin-bottom: 10px;\n  color: ${({ theme }) => theme.text};\n`;\n\nconst Details = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Info = styled.span`\n  color: ${({ theme }) => theme.textSoft};\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  gap: 20px;\n  color: ${({ theme }) => theme.text};\n`;\n\nconst Button = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  cursor: pointer;\n`;\n\nconst Hr = styled.hr`\n  margin: 15px 0px;\n  border: 0.5px solid ${({ theme }) => theme.soft};\n`;\n\n\nconst Channel = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ChannelInfo = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nconst Image = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n`;\n\nconst ChannelDetail = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: ${({ theme }) => theme.text};\n`;\n\nconst ChannelName = styled.span`\n  font-weight: 500;\n`;\n\nconst ChannelCounter = styled.span`\n  margin-top: 5px;\n  margin-bottom: 20px;\n  color: ${({ theme }) => theme.textSoft};\n  font-size: 12px;\n`;\n\nconst Description = styled.p`\n  font-size: 14px;\n`;\n\nconst Subscribe = styled.button`\n  background-color: #cc1a00;\n  font-weight: 500;\n  color: white;\n  border: none;\n  border-radius: 3px;\n  height: max-content;\n  padding: 10px 20px;\n  cursor: pointer;\n`;\n\nconst VideoFrame = styled.video`\nmax-height: 720px;\nwidth: 100%;\nobject-fit: cover;\n`;\n\nconst Video = () => {\n  const [video,setVideo] = useState()\n  const [channel , setChannel] = useState()\n   const {currentUser} = useSelector((state)=>state.user)\n   const {currentVideo} = useSelector((state)=>state.video)\n   const dispatch = useDispatch()\n\n  const path = useLocation().pathname.split('/')[2]\n  useEffect(()=>{\n    const fetchVideoData = async()=>{\n      dispatch(fetchStart())\n      try {\n        const videoRes = await axios.get(`/videos/find/${path}`)\n        const channelRes = await axios.get(`/users/find/${videoRes.data.userId}`)\n        setChannel(channelRes.data)\n        dispatch(fetchSuccess(videoRes.data))\n      } catch (error) {\n        dispatch(fetchFailure)\n        \n      }\n\n    }\n    fetchVideoData()\n\n  },[path,dispatch])\n\n// Like a video \nconst handleLike = async ()=>{\n  await axios.put (`/users/like/${currentVideo._id}`)\n  dispatch(like(currentUser._id))\n\n}\n\nconst handleDislike = async ()=>{\n  await axios.put (`/users/dislike/${currentVideo._id}`)\n  dispatch(dislike(currentUser._id))\n}\n\nconst handleSub = async()=>{\n\n  currentUser.subscribedUsers?.includes(channel._id) ? \n  await axios.put(`/users/sub/${channel._id}`) : await axios.put(`/users/unsub/${channel._id}`)\n  dispatch(subscription(channel._id))\n\n}\n\n  return (\n    <Container>\n      <Content>\n        <VideoWrapper>\n        <VideoFrame src={currentVideo.videoUrl}  controls/>\n\n        </VideoWrapper>\n        <Title>{currentVideo.title}</Title>\n        <Details>\n          <Info>{currentVideo.views} views • {format(currentVideo.createdAt)}</Info>\n          <Buttons>\n            <Button onClick={handleLike}>\n             { currentVideo.likes?.includes(currentUser._id) ? ( <ThumbUpIcon/> ):(<ThumbUpOutlinedIcon />) } {currentVideo.likes?.length} Likes\n            </Button>\n            <Button onClick={handleDislike}>\n              { currentVideo.dislikes?.includes(currentUser._id) ? (<ThumbDownIcon/>) : (<ThumbDownOffAltOutlinedIcon />)} {currentVideo.dislikes?.length} Dislikes\n            </Button>\n            <Button>\n              <ReplyOutlinedIcon /> Share\n            </Button>\n            <Button>\n              <AddTaskOutlinedIcon /> Save\n            </Button>\n          </Buttons>\n        </Details>\n        <Hr />\n        <Channel>\n          <ChannelInfo>\n            <Image src={channel.img} />\n            <ChannelDetail>\n              <ChannelName>{channel.name}</ChannelName>\n              <ChannelCounter>{channel.subscribers} subscribers</ChannelCounter>\n              <Description>\n                 {currentVideo.desc}\n              </Description>\n            </ChannelDetail>\n          </ChannelInfo>\n          <Subscribe onClick={handleSub}>{currentUser.subscribedUsers?.includes(channel._id) ? \"SUBSCRIBED\" : \"SUBSCRIBE\"}</Subscribe>\n        </Channel>\n        <Hr />\n        <Comments videoId ={currentVideo._id}/>\n      </Content>\n      <Recomendation tags ={currentVideo.tags} />\n    </Container>\n  );\n};\n\nexport default Video;\n","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Comments.jsx",["110"],[],"import React from \"react\";\nimport styled from \"styled-components\";\nimport Comment from \"./Comment\";\nimport {currentUser} from '../redux/userSlice'\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Container = styled.div``;\n\nconst NewComment = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst Avatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${({ theme }) => theme.soft};\n  color: ${({ theme }) => theme.text};\n  background-color: transparent;\n  outline: none;\n  padding: 5px;\n  width: 100%;\n`;\n\n\nconst Comments = ({videoId}) => {\n\n  const {currentUser} = useSelector((state)=>state.user)\n  const [comments , setComments] = useState([])\n  useEffect (()=>{\n  const fetchComment = async()=>{\n  try {\n    const res =await axios.get(`/comments/${videoId}`)\n    setComments(res.data)    \n  } catch (error) {\n  }\n  }\n  fetchComment()\n  },[videoId])\n  \n  \n  return (\n    <Container>\n      <NewComment> \n        <Avatar src={currentUser.img} />\n        <Input placeholder=\"Add a comment...\" />\n      </NewComment>\n        {comments.map((comment)=>{\n          return <Comment key={comment._id} comment={comment}/>\n        })}\n    </Container>\n  );\n};\n\nexport default Comments;\n","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Card.jsx",["111","112","113"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { format, render, cancel, register } from 'timeago.js';\nimport axios from \"axios\"\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nconst Container = styled.div`\n  width: ${(props) => props.type !== \"sm\" && \"360px\"};\n  margin-bottom: ${(props) => (props.type === \"sm\" ? \"10px\" : \"45px\")};\n  cursor: pointer;\n  display: ${(props) => props.type === \"sm\" && \"flex\"};\n  gap: 10px;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: ${(props) => (props.type === \"sm\" ? \"120px\" : \"202px\")};\n  background-color: #999;\n  flex: 1;\n`;\n\nconst Details = styled.div`\n  display: flex;\n  margin-top: ${(props) => props.type !== \"sm\" && \"16px\"};\n  gap: 12px;\n  flex: 1;\n`;\n\nconst ChannelImage = styled.img`\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: #999;\n  display: ${(props) => props.type === \"sm\" && \"none\"};\n`;\n\nconst Texts = styled.div``;\n\nconst Title = styled.h1`\n  font-size: 16px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.text};\n`;\n\nconst ChannelName = styled.h2`\n  font-size: 14px;\n  color: ${({ theme }) => theme.textSoft};\n  margin: 9px 0px;\n`;\n\nconst Info = styled.div`\n  font-size: 14px;\n  color: ${({ theme }) => theme.textSoft};\n`;\n//TODO install timeago.js\n\nconst Card = ({ type,video }) => {\n  \n  const [channel,setChannels] = useState([])\n  useEffect(()=>{\n\n    const fetchChannels =async ()=>{\n      const res =await axios.get(`/users/find/${video.userId}`)\n      setChannels(res.data)\n    }\n    fetchChannels()\n\n  },[video.userId])\n\n  return (\n    <Link to={`/videos/${video._id}`} style={{ textDecoration: \"none\" }}>\n      <Container type={type}>\n        <Image\n          type={type}\n          src={video.imageUrl}\n        />\n        <Details type={type}>\n          <ChannelImage\n            type={type}\n            src={channel.image}\n          />\n          <Texts>\n            <Title>{video.title}</Title>\n            <ChannelName>{channel.name}</ChannelName>\n            <Info>{video.views} • {format(video.createdAt)}</Info>\n          </Texts>\n        </Details>\n      </Container>\n    </Link>\n  );\n};\n\nexport default Card;\n","/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Comment.jsx",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/redux/userSlice.js",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/redux/store.js",["114"],[],"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport userReducer from \"./userSlice\";\nimport videoReducer from \"./videoSlice\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n//TODO install the  redux-persist\n\n// The persistance configuration in redux-toolkit is used to store the states persited in local storage.\n// We need to register the reducer so that it can be used with the persistent .\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\n\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n};\n\nconst rootReducer = combineReducers({ user: userReducer, video: videoReducer });\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store)","/home/mophat/Downloads/Projects/Soma_Tube/client/src/redux/videoSlice.js",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/firebase.js",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/pages/Search.jsx",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Upload.jsx",[],[],"/home/mophat/Downloads/Projects/Soma_Tube/client/src/components/Recomendation.jsx",["115"],[],"import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@mui/material';\nimport { useEffect } from 'react';\nimport axios from \"axios\"\nimport { useState } from 'react';\n\n\nconst Container = styled.div`\n  flex: 2;\n`;\nfunction Recomendation({tags}) {\n    const [videos , setVideos] = useState([])\n    \n    useEffect(()=>{\n     const fetchRelatedVideos = async ()=>{\n        const res = await axios.get(`/videos/tags?tags=${tags}`)\n        setVideos(res.data)\n\n\n\n     }\n    fetchRelatedVideos()\n    },[tags])\n    return (\n    <container>\n        {\n            videos.map((video)=>{\n                return <Card type=\"sm\" key={video._id} video={video}/>\n            })\n        }\n\n    </container>\n  )\n}\n\nexport default Recomendation","/home/mophat/Downloads/Projects/Soma_Tube/client/src/modules.js",[],[],{"ruleId":"116","severity":1,"message":"117","line":69,"column":16,"nodeType":"118","messageId":"119","endLine":69,"endColumn":27,"fix":"120"},{"ruleId":"121","severity":1,"message":"122","line":23,"column":10,"nodeType":"123","messageId":"124","endLine":23,"endColumn":19},{"ruleId":"121","severity":1,"message":"125","line":8,"column":10,"nodeType":"123","messageId":"124","endLine":8,"endColumn":15},{"ruleId":"121","severity":1,"message":"126","line":9,"column":10,"nodeType":"123","messageId":"124","endLine":9,"endColumn":21},{"ruleId":"121","severity":1,"message":"127","line":122,"column":10,"nodeType":"123","messageId":"124","endLine":122,"endColumn":15},{"ruleId":"121","severity":1,"message":"128","line":122,"column":16,"nodeType":"123","messageId":"124","endLine":122,"endColumn":24},{"ruleId":"121","severity":1,"message":"129","line":4,"column":9,"nodeType":"123","messageId":"124","endLine":4,"endColumn":20},{"ruleId":"121","severity":1,"message":"130","line":4,"column":18,"nodeType":"123","messageId":"124","endLine":4,"endColumn":24},{"ruleId":"121","severity":1,"message":"131","line":4,"column":26,"nodeType":"123","messageId":"124","endLine":4,"endColumn":32},{"ruleId":"121","severity":1,"message":"132","line":4,"column":34,"nodeType":"123","messageId":"124","endLine":4,"endColumn":42},{"ruleId":"121","severity":1,"message":"133","line":19,"column":10,"nodeType":"123","messageId":"124","endLine":19,"endColumn":21},{"ruleId":"121","severity":1,"message":"134","line":9,"column":7,"nodeType":"123","messageId":"124","endLine":9,"endColumn":16},"no-whitespace-before-property","Unexpected whitespace before property img.","MemberExpression","unexpectedWhitespace",{"range":"135","text":"136"},"no-unused-vars","'serverUrl' is defined but never used.","Identifier","unusedVar","'async' is defined but never used.","'useNavigate' is defined but never used.","'video' is assigned a value but never used.","'setVideo' is assigned a value but never used.","'currentUser' is defined but never used.","'render' is defined but never used.","'cancel' is defined but never used.","'register' is defined but never used.","'PersistGate' is defined but never used.","'Container' is assigned a value but never used.",[1562,1564],"."]
{"ast":null,"code":"//TODO: install @reduxjs/toolkit and react-redux\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  loading: false,\n  currentUser: null,\n  error: false\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n    },\n    loginSuccess: (state, action) => {\n      state.currentUser = action.payload;\n      state.loading = false;\n    },\n    loginFailure: state => {\n      state.loading = false;\n      state.error = true;\n    },\n    logout: state => {\n      state.currentUser = null;\n    },\n    subscription: (state, action) => {\n      if (state.currentUser.subscribedUsers.includes(action.payload)) {\n        state.currentUser.subscribedUsers.splice(state.currentUser.subscribedUsers.findIndex(channelId => channelId === action.payload), 1);\n      } else {\n        state.currentUser.subscribedUsers.push(action.payload);\n      }\n    }\n  }\n});\n\n// export the reducer functions \n\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  subscription\n} = userSlice.actions;\n\n// export the reducer \n\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","loading","currentUser","error","userSlice","name","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logout","subscription","subscribedUsers","includes","splice","findIndex","channelId","push","actions","reducer"],"sources":["/home/mophat/Downloads/Projects/Soma_Tube/client/src/redux/userSlice.js"],"sourcesContent":["//TODO: install @reduxjs/toolkit and react-redux\nimport {createSlice } from '@reduxjs/toolkit';\n\n\nconst initialState = {\n    loading :false,\n    currentUser:null,\n    error:false\n}\n\nexport const userSlice = createSlice({\n    name:\"user\",\n    initialState,\n    reducers:{\n        loginStart : (state)=>{\n            state.loading = true\n           \n        },\n        loginSuccess:(state,action)=>{\n            state.currentUser = action.payload\n            state.loading = false\n\n        },\n        loginFailure:(state)=>{\n            state.loading = false\n            state.error=true\n\n        },\n        logout:(state)=>{\n            state.currentUser = null\n\n          \n        },\n        subscription : (state, action) => {\n\n            if (state.currentUser.subscribedUsers.includes(action.payload)) {\n                state.currentUser.subscribedUsers.splice(\n                  state.currentUser.subscribedUsers.findIndex(\n                    (channelId) => channelId === action.payload\n                  ),1)\n        }else{\n            state.currentUser.subscribedUsers.push(action.payload)\n        }\n    \n    },\n\n    } \n    \n})\n\n// export the reducer functions \n\nexport const { loginStart , loginSuccess , loginFailure , logout , subscription} =  userSlice.actions\n\n// export the reducer \n\nexport default userSlice.reducer"],"mappings":"AAAA;AACA,SAAQA,WAAW,QAAQ,kBAAkB;AAG7C,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,KAAK;EACdC,WAAW,EAAC,IAAI;EAChBC,KAAK,EAAC;AACV,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;EACjCM,IAAI,EAAC,MAAM;EACXL,YAAY;EACZM,QAAQ,EAAC;IACLC,UAAU,EAAIC,KAAK,IAAG;MAClBA,KAAK,CAACP,OAAO,GAAG,IAAI;IAExB,CAAC;IACDQ,YAAY,EAACA,CAACD,KAAK,EAACE,MAAM,KAAG;MACzBF,KAAK,CAACN,WAAW,GAAGQ,MAAM,CAACC,OAAO;MAClCH,KAAK,CAACP,OAAO,GAAG,KAAK;IAEzB,CAAC;IACDW,YAAY,EAAEJ,KAAK,IAAG;MAClBA,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACL,KAAK,GAAC,IAAI;IAEpB,CAAC;IACDU,MAAM,EAAEL,KAAK,IAAG;MACZA,KAAK,CAACN,WAAW,GAAG,IAAI;IAG5B,CAAC;IACDY,YAAY,EAAGA,CAACN,KAAK,EAAEE,MAAM,KAAK;MAE9B,IAAIF,KAAK,CAACN,WAAW,CAACa,eAAe,CAACC,QAAQ,CAACN,MAAM,CAACC,OAAO,CAAC,EAAE;QAC5DH,KAAK,CAACN,WAAW,CAACa,eAAe,CAACE,MAAM,CACtCT,KAAK,CAACN,WAAW,CAACa,eAAe,CAACG,SAAS,CACxCC,SAAS,IAAKA,SAAS,KAAKT,MAAM,CAACC,OAAO,CAC5C,EAAC,CAAC,CAAC;MACd,CAAC,MAAI;QACDH,KAAK,CAACN,WAAW,CAACa,eAAe,CAACK,IAAI,CAACV,MAAM,CAACC,OAAO,CAAC;MAC1D;IAEJ;EAEA;AAEJ,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAM;EAAEJ,UAAU;EAAGE,YAAY;EAAGG,YAAY;EAAGC,MAAM;EAAGC;AAAY,CAAC,GAAIV,SAAS,CAACiB,OAAO;;AAErG;;AAEA,eAAejB,SAAS,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}